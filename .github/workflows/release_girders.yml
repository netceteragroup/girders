name: Release Girders

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        required: true
        type: string
      developmentVersion:
        description: 'Development version after release'
        required: true
        type: string
      publishTo:
        description: 'Publish to'
        required: true
        default: 'MavenCentral'
        type: choice
        options:
          - 'MavenCentral'
          - 'none (dry run)'

env:
  RELEASE_VERSION: ${{ inputs.releaseVersion }}
  DEVELOPMENT_VERSION: ${{ inputs.developmentVersion }}
  PUBLISH_TO: ${{ inputs.publishTo }}

jobs:
  log_inputs:
    name: log the input params
    runs-on: ubuntu-latest
    steps:
      - name: log the input params
        run: |
          echo "Release version: $RELEASE_VERSION"
          echo "Development version: $DEVELOPMENT_VERSION"
          echo "Publish to: $PUBLISH_TO"

  build_release:
    name: build girders release
    runs-on: ubuntu-latest
    env:
      MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
      GPG_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.11'
          distribution: 'zulu'
          cache: 'maven'
          server-id: 'ossrh' # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # same name as above env variable
          server-password: MAVEN_PASSWORD # same name as above env variable
          gpg-private-key: ${{ secrets.PGP_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE # same name as above env variable
      - name: Configure git user
        run: |
          git config user.email "girders@netcetera.com"
          git config user.name "GithubActionsBot"
      - name: Maven clean
        run: mvn --batch-mode clean release:clean
        shell: bash
      - name: Maven release:prepare
        run: mvn --batch-mode -DdryRun=${{ env.PUBLISH_TO == 'none (dry run)' }} -DdevelopmentVersion=$DEVELOPMENT_VERSION -DreleaseVersion=$RELEASE_VERSION release:prepare
        shell: bash
      - name: Maven release:perform
        run: mvn --batch-mode -Prelease -DdryRun=${{ env.PUBLISH_TO == 'none (dry run)' }} org.apache.maven.plugins:maven-release-plugin:2.5.3:perform
        shell: bash
  deploy_github_page:
    name: deploy github page
    needs: build_release
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pages: write
    steps:
      - name: Checkout release version
        uses: actions/checkout@v3
        with:
          ref: girders-${{ env.RELEASE_VERSION }}
      - name: Build maven site
        run: mvn site:site
        shell: bash
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: 'target/site/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  create_github_release_notes:
    name: create github release notes
    needs: build_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release version
        uses: actions/checkout@v3
        with:
          ref: girders-${{ env.RELEASE_VERSION }}
      - name: Create release notes
        uses: softprops/action-gh-release@v1
        with:
          tag_name: girders-${{ env.RELEASE_VERSION }}
          prerelease: false
          name: Girders ${{ env.RELEASE_VERSION }}
          generate_release_notes: true
          body_path: ${{ github.workspace }}/.github/release_notes_template.md